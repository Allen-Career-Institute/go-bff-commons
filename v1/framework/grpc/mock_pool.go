// Code generated by MockGen. DO NOT EDIT.
// Source: framework/grpc/pool.go

// Package grpc is a generated GoMock package.
package grpc

import (
	config "github.com/Allen-Career-Institute/go-bff-commons/v1/config"
	logger "github.com/Allen-Career-Institute/go-bff-commons/v1/pkg/logger"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo/v4"
	metric "go.opentelemetry.io/otel/metric"
	grpc "google.golang.org/grpc"
)

// MockISafeGrpcPool is a mock of ISafeGrpcConnections interface.
type MockISafeGrpcPool struct {
	ctrl     *gomock.Controller
	recorder *MockISafeGrpcPoolMockRecorder
}

// MockISafeGrpcPoolMockRecorder is the mock recorder for MockISafeGrpcPool.
type MockISafeGrpcPoolMockRecorder struct {
	mock *MockISafeGrpcPool
}

// NewMockISafeGrpcPool creates a new mock instance.
func NewMockISafeGrpcPool(ctrl *gomock.Controller) *MockISafeGrpcPool {
	mock := &MockISafeGrpcPool{ctrl: ctrl}
	mock.recorder = &MockISafeGrpcPoolMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockISafeGrpcPool) EXPECT() *MockISafeGrpcPoolMockRecorder {
	return m.recorder
}

// CreateConnectionForClient mocks base method.
func (m *MockISafeGrpcPool) CreateConnectionForClient(ctx echo.Context, log logger.Logger, client string, cfg *config.CommonConfig, meter metric.Meter) (*grpc.ClientConn, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateConnectionForClient", ctx, log, client, cfg, meter)
	ret0, _ := ret[0].(*grpc.ClientConn)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateConnectionForClient indicates an expected call of CreateConnectionForClient.
func (mr *MockISafeGrpcPoolMockRecorder) CreateConnectionForClient(ctx, log, client, cfg, meter interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateConnectionForClient", reflect.TypeOf((*MockISafeGrpcPool)(nil).CreateConnectionForClient), ctx, log, client, cfg, meter)
}

// GetConnectionForClient mocks base method.
func (m *MockISafeGrpcPool) GetConnectionForClient(client string) (*grpc.ClientConn, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConnectionForClient", client)
	ret0, _ := ret[0].(*grpc.ClientConn)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetConnectionForClient indicates an expected call of GetConnectionForClient.
func (mr *MockISafeGrpcPoolMockRecorder) GetConnectionForClient(client interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConnectionForClient", reflect.TypeOf((*MockISafeGrpcPool)(nil).GetConnectionForClient), client)
}

// SetConnectionForClient mocks base method.
func (m *MockISafeGrpcPool) SetConnectionForClient(client string, conn *grpc.ClientConn) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetConnectionForClient", client, conn)
}

// SetConnectionForClient indicates an expected call of SetConnectionForClient.
func (mr *MockISafeGrpcPoolMockRecorder) SetConnectionForClient(client, conn interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetConnectionForClient", reflect.TypeOf((*MockISafeGrpcPool)(nil).SetConnectionForClient), client, conn)
}
